{"version":3,"file":"static/js/53.b4f5d531.chunk.js","mappings":"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","sources":["Components/Register/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ComponentCover from \"../ComponentCover/ComponentCover\";\r\nimport MainBtn from \"../MainBtn/MainBtn\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\n\r\nexport default function Register() {\r\n  let [loading, setLoading] = useState(false);\r\n  let [error, setError] = useState(\"\");\r\n  let [success, setSuccess] = useState(\"\");\r\n\r\n  let navigate = useNavigate();\r\n\r\n  let baseUrl = \"https://ecommerce.routemisr.com\";\r\n\r\n  let submitForm = async (values) => {\r\n    setLoading(true);\r\n    let { data } = await axios\r\n      .post(`${baseUrl}/api/v1/auth/signup`, values)\r\n      .catch((err) => {\r\n        setError(err.response.data.message);\r\n        setLoading(false);\r\n      });\r\n\r\n    if (data.message === \"success\") {\r\n      setError(\"\");\r\n      setSuccess(data.message);\r\n      setTimeout(() => navigate(\"/login\"), 3000);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string()\r\n      .required(\"Name is required\")\r\n      .min(3, \"Minimum length is 5 characters\")\r\n      .max(10, \"Max length is 10 characters\")\r\n      .matches(/^[a-zA-Z]+$/, \"Your name should only contain characters\"),\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email is not valid\")\r\n      .matches(\r\n        /([a-z0-9][-a-z0-9_\\+\\.]*[a-z0-9])@([a-z0-9][-a-z0-9\\.]*[a-z0-9]\\.(arpa|root|aero|biz|cat|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|pro|tel|travel|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zw)|([0-9]{1,3}\\.{3}[0-9]{1,3}))/,\r\n        \"your email must be a valid and real email\"\r\n      ),\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .matches(\r\n        /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})/,\r\n        \"Your password must contain a special character, a number,and a capital character\"\r\n      ),\r\n    rePassword: Yup.string()\r\n      .required(\"Re password is required\")\r\n      .oneOf([Yup.ref(\"password\")], \"Re password must be match your password\"),\r\n    phone: Yup.string()\r\n      .required(\"Phone number is required\")\r\n      .matches(\r\n        /^01[0-2,5]\\d{8}$/,\r\n        \"Your phone must start with 010 / 011 / 012 / 015 and must be 11 numbers\"\r\n      ),\r\n  });\r\n\r\n  let formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      rePassword: \"\",\r\n      phone: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: submitForm,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Register</title>\r\n      </Helmet>\r\n      <ComponentCover text={\"Register\"} path={\"Register\"} />\r\n      <div className=\"w-75 m-auto shadow text-center my-5 p-5\">\r\n        <h3>SignUp</h3>\r\n        <p className=\"text-muted\">\r\n          Please fill the bellow details to create an account.\r\n        </p>\r\n        <form\r\n          onSubmit={formik.handleSubmit}\r\n          action=\"\"\r\n          className=\"d-flex justify-content-center align-items-center flex-column\"\r\n        >\r\n          {error ? (\r\n            <p className=\"alert alert-danger rounded-0 w-100\">{error}.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {success ? (\r\n            <p className=\"alert alert-success rounded-0 w-100\">\r\n              Account created successfully.\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-3 rounded-0\"\r\n            placeholder=\"User name\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.errors.name && formik.touched.name ? (\r\n            <p className=\"alert alert-danger mt-0 rounded-0 w-100\">\r\n              {formik.errors.name}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control mb-3 rounded-0\"\r\n            placeholder=\"Email address\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.errors.email && formik.touched.email ? (\r\n            <p className=\"alert alert-danger mt-0 rounded-0 w-100\">\r\n              {formik.errors.email}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control mb-3 rounded-0\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.errors.password && formik.touched.password ? (\r\n            <p className=\"alert alert-danger mt-0 rounded-0 w-100\">\r\n              {formik.errors.password}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control mb-3 rounded-0\"\r\n            placeholder=\"Re-password\"\r\n            name=\"rePassword\"\r\n            id=\"rePassword\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.rePassword}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.errors.rePassword && formik.touched.rePassword ? (\r\n            <p className=\"alert alert-danger mt-0 rounded-0 w-100\">\r\n              {formik.errors.rePassword}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <input\r\n            type=\"tele\"\r\n            className=\"form-control mb-3 rounded-0\"\r\n            placeholder=\"User number\"\r\n            name=\"phone\"\r\n            id=\"phone\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.phone}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.errors.phone && formik.touched.phone ? (\r\n            <p className=\"alert alert-danger mt-0 rounded-0 w-100\">\r\n              {formik.errors.phone}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <MainBtn\r\n            text={\r\n              loading ? (\r\n                <ThreeDots\r\n                  height=\"30\"\r\n                  width=\"80\"\r\n                  radius=\"9\"\r\n                  color=\"#212529bf\"\r\n                  ariaLabel=\"three-dots-loading\"\r\n                  wrapperStyle={{}}\r\n                  wrapperClassName=\"\"\r\n                  visible={true}\r\n                />\r\n              ) : (\r\n                \"Sign Up\"\r\n              )\r\n            }\r\n            width={\"w-100\"}\r\n            type={\"submit\"}\r\n          />\r\n          <Link to=\"/login\" className=\"mt-3 text-muted login\">\r\n            Already have an account? Login.\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Register","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","success","setSuccess","navigate","useNavigate","submitForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_yield$axios$post$cat","data","wrap","_context","prev","next","axios","post","concat","catch","err","response","message","sent","setTimeout","stop","_x","apply","arguments","validationSchema","Yup","name","required","min","max","matches","email","password","rePassword","oneOf","phone","formik","useFormik","initialValues","onSubmit","_jsxs","_Fragment","children","Helmet","_jsx","charSet","ComponentCover","text","path","className","handleSubmit","action","type","placeholder","id","onChange","handleChange","value","onBlur","handleBlur","errors","touched","MainBtn","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Link","to"],"sourceRoot":""}