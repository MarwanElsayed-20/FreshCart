{"version":3,"file":"static/js/673.76871974.chunk.js","mappings":"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","sources":["Components/ForgotPassword/ResetCode/ResetCode.jsx","Components/ForgotPassword/ForgotPassword.jsx"],"sourcesContent":["import Modal from \"@mui/material/Modal\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { PasswordContext } from \"../../../Context/PasswordContext\";\r\nimport { useFormik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { Box } from \"@mui/material\";\r\nimport MainBtn from \"../../MainBtn/MainBtn\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ResetCode() {\r\n  let [error, setError] = useState(\"\");\r\n  let [success, setSuccess] = useState(\"\");\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  let { open, handleClose, setOpen } = useContext(PasswordContext);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  let baseUrl = \"https://ecommerce.routemisr.com\";\r\n\r\n  let submitForm = async (values) => {\r\n    setLoading(true);\r\n    let { data } = await axios\r\n      .post(`${baseUrl}/api/v1/auth/verifyResetCode`, values)\r\n      .catch((err) => {\r\n        setError(err.response.data.message);\r\n        setLoading(false);\r\n        console.log(data);\r\n      });\r\n    if (data.status === \"Success\") {\r\n      setError(\"\");\r\n      setSuccess(data.status);\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        navigate(\"/CreateNewPassword\");\r\n      }, 2000);\r\n      setLoading(false);\r\n      console.log(data);\r\n    }\r\n    console.log(data);\r\n  };\r\n\r\n  let formik = useFormik({\r\n    initialValues: {\r\n      resetCode: \"\",\r\n    },\r\n    onSubmit: submitForm,\r\n  });\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"none\",\r\n    boxShadow: 24,\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <div className=\"w-100 p-5 m-0 shadow text-center bg-white\">\r\n            <p className=\"text-muted m-0\">Please enter the reset code.</p>\r\n            <p className=\"text-muted\">\r\n              The reset code will expire in 10 minutes\r\n            </p>\r\n            <form\r\n              onSubmit={formik.handleSubmit}\r\n              action=\"\"\r\n              className=\"d-flex justify-content-center align-items-center flex-column\"\r\n            >\r\n              {error ? (\r\n                <p className=\"alert alert-danger rounded-0 w-100\">{error}.</p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {success ? (\r\n                <p className=\"alert alert-success rounded-0 w-100\">\r\n                  {success}{\" \"}\r\n                  <span className=\"d-block\">\r\n                    Please wait, we will redirect you.\r\n                  </span>\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-3 rounded-0\"\r\n                placeholder=\"Reset code\"\r\n                name=\"resetCode\"\r\n                id=\"resetCode\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.resetCode}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n              <MainBtn\r\n                text={\r\n                  loading ? (\r\n                    <ThreeDots\r\n                      height=\"30\"\r\n                      width=\"80\"\r\n                      radius=\"9\"\r\n                      color=\"#212529bf\"\r\n                      ariaLabel=\"three-dots-loading\"\r\n                      wrapperStyle={{}}\r\n                      wrapperClassName=\"\"\r\n                      visible={true}\r\n                    />\r\n                  ) : (\r\n                    \"Submit\"\r\n                  )\r\n                }\r\n                width={\"w-100\"}\r\n                type={\"submit\"}\r\n              />\r\n            </form>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ComponentCover from \"../ComponentCover/ComponentCover\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MainBtn from \"../MainBtn/MainBtn\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\nimport { PasswordContext } from \"../../Context/PasswordContext\";\r\nimport ResetCode from \"./ResetCode/ResetCode\";\r\n\r\nexport default function ForgotPassword() {\r\n  let { forgotPasswordFun, reset, success, error, loading } =\r\n    useContext(PasswordContext);\r\n\r\n  let submitForm = async (values) => {\r\n    await forgotPasswordFun(values);\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email is not valid\"),\r\n  });\r\n\r\n  let formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: submitForm,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Forgot Password</title>\r\n      </Helmet>\r\n      <ComponentCover text={\"Forgot Password\"} path={\"Forgot Password\"} />\r\n      <div className=\"w-75 m-auto shadow text-center my-5 p-5\">\r\n        <h3>Forgot your password?</h3>\r\n        <p className=\"text-muted\">Please enter your email.</p>\r\n        <form\r\n          onSubmit={formik.handleSubmit}\r\n          action=\"\"\r\n          className=\"d-flex justify-content-center align-items-center flex-column\"\r\n        >\r\n          {error ? (\r\n            <p className=\"alert alert-danger rounded-0 w-100\">{error}.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {success ? (\r\n            <p className=\"alert alert-success rounded-0 w-100\">{success}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control mb-3 rounded-0\"\r\n            placeholder=\"Email address\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.errors.email && formik.touched.email ? (\r\n            <p className=\"alert alert-danger mt-0 rounded-0 w-100\">\r\n              {formik.errors.email}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <MainBtn\r\n            text={\r\n              loading ? (\r\n                <ThreeDots\r\n                  height=\"30\"\r\n                  width=\"80\"\r\n                  radius=\"9\"\r\n                  color=\"#212529bf\"\r\n                  ariaLabel=\"three-dots-loading\"\r\n                  wrapperStyle={{}}\r\n                  wrapperClassName=\"\"\r\n                  visible={true}\r\n                />\r\n              ) : (\r\n                \"Submit\"\r\n              )\r\n            }\r\n            width={\"w-100\"}\r\n            type={\"submit\"}\r\n          />\r\n        </form>\r\n        {reset ? <ResetCode /> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["ResetCode","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","success","setSuccess","_useState5","_useState6","loading","setLoading","_useContext","useContext","PasswordContext","open","handleClose","setOpen","navigate","useNavigate","submitForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_yield$axios$post$cat","data","wrap","_context","prev","next","axios","post","concat","catch","err","response","message","console","log","sent","status","setTimeout","stop","_x","apply","arguments","formik","useFormik","initialValues","resetCode","onSubmit","_jsx","_Fragment","children","Modal","onClose","Box","sx","position","top","left","transform","bgcolor","border","boxShadow","_jsxs","className","handleSubmit","action","type","placeholder","name","id","onChange","handleChange","value","onBlur","handleBlur","MainBtn","text","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ForgotPassword","forgotPasswordFun","reset","validationSchema","Yup","email","required","Helmet","charSet","ComponentCover","path","errors","touched"],"sourceRoot":""}