{"version":3,"file":"static/js/125.5a665d9a.chunk.js","mappings":"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","sources":["Components/ForgotPassword/CreateNewPassword/CreateNewPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ComponentCover from \"../../ComponentCover/ComponentCover\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MainBtn from \"../../MainBtn/MainBtn\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function CreateNewPassword() {\r\n  let [error, setError] = useState(\"\");\r\n  let [success, setSuccess] = useState(false);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  let baseUrl = \"https://ecommerce.routemisr.com\";\r\n\r\n  let submitForm = async (values) => {\r\n    setLoading(true);\r\n    let { data } = await axios\r\n      .put(`${baseUrl}/api/v1/auth/resetPassword`, values)\r\n      .catch((err) => {\r\n        setError(err.response.data.message);\r\n        setLoading(false);\r\n      });\r\n    if (data.token) {\r\n      setError(\"\");\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n        navigate(\"/login\");\r\n      }, 3000);\r\n\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email is not valid\"),\r\n    newPassword: Yup.string()\r\n      .required(\"New password is required\")\r\n      .matches(\r\n        /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})/,\r\n        \"Your password must contain a special character, a number,and a capital character\"\r\n      ),\r\n  });\r\n\r\n  let formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      newPassword: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: submitForm,\r\n  });\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Create New Password</title>\r\n      </Helmet>\r\n      <ComponentCover\r\n        text={\"Create new password\"}\r\n        path={\"Create new password\"}\r\n      />\r\n      <div className=\"w-75 m-auto shadow text-center my-5 p-5\">\r\n        <h3>Create New Password</h3>\r\n        <p className=\"text-muted\">Please create new password</p>\r\n        <form\r\n          onSubmit={formik.handleSubmit}\r\n          action=\"\"\r\n          className=\"d-flex justify-content-center align-items-center flex-column\"\r\n        >\r\n          {error ? (\r\n            <p className=\"alert alert-danger rounded-0 w-100\">{error}.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {success ? (\r\n            <p className=\"alert alert-success rounded-0 w-100\">\r\n              Your Password changed successfully.\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control mb-3 rounded-0\"\r\n            placeholder=\"Your email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.errors.email && formik.touched.email ? (\r\n            <p className=\"alert alert-danger mt-0 rounded-0 w-100\">\r\n              {formik.errors.email}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control mb-3 rounded-0\"\r\n            placeholder=\"New password\"\r\n            name=\"newPassword\"\r\n            id=\"newPassword\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.newPassword}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.errors.newPassword && formik.touched.newPassword ? (\r\n            <p className=\"alert alert-danger mt-0 rounded-0 w-100\">\r\n              {formik.errors.newPassword}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <MainBtn\r\n            text={\r\n              loading ? (\r\n                <ThreeDots\r\n                  height=\"30\"\r\n                  width=\"80\"\r\n                  radius=\"9\"\r\n                  color=\"#212529bf\"\r\n                  ariaLabel=\"three-dots-loading\"\r\n                  wrapperStyle={{}}\r\n                  wrapperClassName=\"\"\r\n                  visible={true}\r\n                />\r\n              ) : (\r\n                \"Submit\"\r\n              )\r\n            }\r\n            width={\"w-100\"}\r\n            type={\"submit\"}\r\n          />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["CreateNewPassword","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","success","setSuccess","_useState5","_useState6","loading","setLoading","navigate","useNavigate","submitForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_yield$axios$put$catc","wrap","_context","prev","next","axios","put","concat","catch","err","response","data","message","sent","token","setTimeout","stop","_x","apply","arguments","validationSchema","Yup","email","required","newPassword","matches","formik","useFormik","initialValues","onSubmit","_jsxs","_Fragment","children","Helmet","_jsx","charSet","ComponentCover","text","path","className","handleSubmit","action","type","placeholder","name","id","onChange","handleChange","value","onBlur","handleBlur","errors","touched","MainBtn","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}